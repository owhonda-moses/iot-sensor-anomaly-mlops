name: Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'src/**'
      - '.github/workflows/deploy.yml'
      - 'requirements.txt'
      - 'prefect.yaml'
  workflow_run:
    workflows: ["Terraform"]
    types: ["completed"]

permissions:
  contents: read
  id-token: write

env:
  GCP_PROJECT:     ${{ secrets.GCP_PROJECT }}
  GCP_REGION:      ${{ secrets.GCP_REGION }}
  ARTIFACT_REPO:   mlops-docker
  IMAGE_NAME:      mlops-app
  DB_INSTANCE:     "${{ secrets.GCP_PROJECT }}:${{ secrets.GCP_REGION }}:mlflow-pg"
  ARTIFACT_BUCKET: ${{ secrets.ARTIFACT_BUCKET }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: GCP Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Build & Push Docker Image
        run: |
          IMAGE_URI="${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:latest"
          gcloud builds submit . --tag ${IMAGE_URI}

      - name: Deploy MLflow Server
        run: |
          IMAGE_URI="${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:latest"
          gcloud run deploy mlflow-server \
            --image ${IMAGE_URI} \
            --region ${GCP_REGION} \
            --platform managed \
            --vpc-connector mlops-vpc \
            --add-cloudsql-instances ${DB_INSTANCE} \
            --set-env-vars="MLFLOW_TRACKING_URI=postgresql+psycopg2://mlflow_user:${{ secrets.DB_PASSWORD }}@/mlflow_db?host=/cloudsql/${DB_INSTANCE}" \
            --set-env-vars="ARTIFACT_BUCKET=${ARTIFACT_BUCKET}" \
            --command="mlflow" \
            --args="server,--host,0.0.0.0,--port,8080,--backend-store-uri,\$MLFLOW_TRACKING_URI,--default-artifact-root,gs://\$ARTIFACT_BUCKET/mlflow"

      - name: Get MLflow Server URL
        id: get_url
        run: |
          URL=$(gcloud run services describe mlflow-server --platform managed --region ${{ env.GCP_REGION }} --format 'value(status.url)')
          echo "MLFLOW_TRACKING_URI=${URL}" >> $GITHUB_ENV

      - name: Deploy Prediction Service
        run: |
          IMAGE_URI="${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:latest"
          gcloud run deploy prediction-service \
            --image ${IMAGE_URI} \
            --region ${GCP_REGION} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars="MLFLOW_TRACKING_URI=${{ env.MLFLOW_TRACKING_URI }}"

      - name: Deploy Prefect Agent
        run: |
          IMAGE_URI="${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:latest"
          gcloud run deploy prefect-agent \
            --image ${IMAGE_URI} \
            --region ${GCP_REGION} \
            --platform managed \
            --command="python" \
            --args="-m,iot_anomaly.agent_service" \
            --set-env-vars="PREFECT_API_URL=${{ secrets.PREFECT_API_URL }}" \
            --set-env-vars="PREFECT_API_KEY=${{ secrets.PREFECT_API_KEY }}" \
            --set-env-vars="MLFLOW_TRACKING_URI=${{ env.MLFLOW_TRACKING_URI }}" \
            --set-env-vars="ARTIFACT_BUCKET=${{ env.ARTIFACT_BUCKET }}"
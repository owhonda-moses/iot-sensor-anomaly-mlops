name: Build & Deploy

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          version: '>=363.0.0'

      - name: Start Cloud SQL Auth Proxy
        uses: mattes/gce-cloudsql-proxy-action@v1
        with:
          creds: ${{ secrets.GCP_SA_KEY }}
          instance: ${{ secrets.GCP_PROJECT }}:${{ secrets.GCP_REGION }}:mlflow-pg
          port: 5432

      - name: Wait for Cloud SQL Proxy
        run: |
          timeout 30 bash -c 'until nc -z 127.0.0.1 5432; do sleep 1; done'
          echo "Cloud SQL Proxy is ready"

      - name: Grant DB privileges to mlflow_user & prefect_user
        env:
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: |
          sleep 5  # give proxy a moment

          # mlflow_user on mlflow_db
          psql -h 127.0.0.1 -p 5432 -U postgres \
            -c "GRANT CONNECT ON DATABASE mlflow_db TO mlflow_user;"
          psql -h 127.0.0.1 -p 5432 -U postgres -d mlflow_db \
            -c "GRANT USAGE ON SCHEMA public TO mlflow_user;"
          psql -h 127.0.0.1 -p 5432 -U postgres -d mlflow_db \
            -c "GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO mlflow_user;"

          # prefect_user on prefect_db
          psql -h 127.0.0.1 -p 5432 -U postgres \
            -c "CREATE USER IF NOT EXISTS prefect_user WITH PASSWORD '${{ secrets.PREFECT_PASSWORD }}';"
          psql -h 127.0.0.1 -p 5432 -U postgres \
            -c "GRANT CONNECT ON DATABASE prefect_db TO prefect_user;"
          psql -h 127.0.0.1 -p 5432 -U postgres -d prefect_db \
            -c "GRANT USAGE ON SCHEMA public TO prefect_user;"
          psql -h 127.0.0.1 -p 5432 -U postgres -d prefect_db \
            -c "GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO prefect_user;"

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      # Docker layer caching (optional):
      # - name: Cache Docker layers
      #   uses: actions/cache@v3
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-
      #
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      #
      # - name: Login to Artifact Registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ${{ secrets.GCP_REGION }}-docker.pkg.dev
      #     username: _json_key
      #     password: ${{ secrets.GCP_SA_KEY }}

      - name: Build & Push mlflow
        run: |
          docker build \
            --file docker/mlflow/Dockerfile \
            --tag ${{ secrets.ARTIFACT_REGISTRY }}/mlflow:latest \
            --tag ${{ secrets.ARTIFACT_REGISTRY }}/mlflow:${{ github.sha }} \
            docker/mlflow
          docker push ${{ secrets.ARTIFACT_REGISTRY }}/mlflow:latest
          docker push ${{ secrets.ARTIFACT_REGISTRY }}/mlflow:${{ github.sha }}

      - name: Build & Push prefect
        run: |
          docker build \
            --file docker/prefect-agent/Dockerfile \
            --tag ${{ secrets.ARTIFACT_REGISTRY }}/prefect:latest \
            --tag ${{ secrets.ARTIFACT_REGISTRY }}/prefect:${{ github.sha }} \
            docker/prefect-agent
          docker push ${{ secrets.ARTIFACT_REGISTRY }}/prefect:latest
          docker push ${{ secrets.ARTIFACT_REGISTRY }}/prefect:${{ github.sha }}

      - name: Deploy MLflow Server to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: mlflow-server
          image: ${{ secrets.ARTIFACT_REGISTRY }}/mlflow:latest
          region: ${{ secrets.GCP_REGION }}
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account: github-actions-sa@${{ secrets.GCP_PROJECT }}.iam.gserviceaccount.com
          vpc_connector: mlops-vpc
          allow_unauthenticated: true
          cloud_sql_instances: ${{ secrets.GCP_PROJECT }}:${{ secrets.GCP_REGION }}:mlflow-pg
          env_vars: |
            MLFLOW_TRACKING_URI=postgresql+psycopg2://mlflow_user:${{ secrets.DB_PASSWORD }}@/mlflow_db?host=/cloudsql/${{ secrets.GCP_PROJECT }}:${{ secrets.GCP_REGION }}:mlflow-pg
            ARTIFACT_BUCKET=${{ secrets.ARTIFACT_BUCKET }}
          port: 8080
          memory: 512Mi
          cpu: 1
          concurrency: 100
          timeout: 300

      - name: Deploy Prefect Agent to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: prefect-agent
          image: ${{ secrets.ARTIFACT_REGISTRY }}/prefect:latest
          region: ${{ secrets.GCP_REGION }}
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account: github-actions-sa@${{ secrets.GCP_PROJECT }}.iam.gserviceaccount.com
          vpc_connector: mlops-vpc
          allow_unauthenticated: false
          cloud_sql_instances: ${{ secrets.GCP_PROJECT }}:${{ secrets.GCP_REGION }}:mlflow-pg
          env_vars: |
            PREFECT_ORION_UI_API_URL=https://mlflow-server-${{ secrets.GCP_REGION }}.run.app
            PREFECT_ORION_DATABASE_CONNECTION_URL=postgresql+asyncpg://prefect_user:${{ secrets.PREFECT_PASSWORD }}@/prefect_db?host=/cloudsql/${{ secrets.GCP_PROJECT }}:${{ secrets.GCP_REGION }}:mlflow-pg
          port: 8080
          memory: 512Mi
          cpu: 1
          concurrency: 10
          timeout: 3600
